{"sections":[],"seeAlsoSections":[{"title":"Advanced UUID Generation","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(rawTimestamp:sequence:node:)"],"generated":true}],"metadata":{"title":"timeOrdered(node:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeOrdered"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:8UniqueIDAAV","text":"UniqueID"}],"extendedModule":"UniqueID","roleHeading":"Type Method","modules":[{"name":"UniqueID"}],"role":"symbol","externalID":"s:8UniqueIDAAV11timeOrdered4nodeABs6UInt64V_tFZ","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeOrdered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UniqueID","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID","preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A node identifier, used to distinguish UUIDs in space"},{"type":"text","text":" "},{"type":"text","text":"(e.g. across processes\/machines, tracking different sequence numbers)."},{"type":"text","text":" "},{"type":"text","text":"This may be an sequence of random or pseudo-random bits, or a value with meaning to your application"},{"type":"text","text":" "},{"type":"text","text":"(e.g. a combined user\/device ID). Only the bottom 48 bits will be used."}],"type":"paragraph"}],"name":"node"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function generates version 6 UUIDs, which are currently in "},{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"They ensure uniqueness in time and space using 3 components:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A 60-bit embedded timestamp, taken from the system clock with 100ns resolution.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A 14-bit sequence number, which is a synchronized counter ensuring uniqueness even if the clock is adjusted."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A 48-bit node identifier, which distinguishes UUIDs in space."},{"type":"text","text":" "},{"type":"text","text":"Typically, these are random bits, but an application-specific identifier may also be used."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example demonstrates using a custom node ID, which is derived from a user and device ID which"},{"type":"text","text":" "},{"type":"text","text":"our backend guarantees is unique. In this case, we use a 36-bit user ID (sufficient for more than 68 billion users),"},{"type":"text","text":" "},{"type":"text","text":"an 8-bit device ID (for 256 devices per user), and 4-bit process ID (for 16 processes per device per user)."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Combine unique information in to a 48-bit number.","\/\/ These IDs are guaranteed unique by a backend service.","let nodeID = makeNodeID(","  userID:    currentUserID,","  deviceID:  currentDeviceID,","  processID: currentProcessID",")","","for _ in 0..<5 {","  print(UniqueID.timeOrdered(node: nodeID))","}","","\"1EC5FEC5-F35E-6C08-B6CE-38FC91741020\"","\"1EC5FEC5-F360-659E-B6CE-38FC91741020\"","\"1EC5FEC5-F360-69EA-B6CE-38FC91741020\"","\"1EC5FEC5-F360-6DA0-B6CE-38FC91741020\"","\"1EC5FEC5-F361-61A6-B6CE-38FC91741020\""," |------------- --| |--| |-------|-||","     timestamp       sq     user  d p"]},{"type":"paragraph","inlineContent":[{"text":"Provided our backend system is reliable at keeping these user\/device\/process IDs unique, we are able","type":"text"},{"text":" ","type":"text"},{"text":"to create far more robust IDs at much larger scale than is possible with random (v4) UUIDs, with all of the","type":"text"},{"text":" ","type":"text"},{"text":"benefits to database performance that come with time-ordered IDs. Many distributed systems and applications","type":"text"},{"text":" ","type":"text"},{"text":"are able to offer these kinds of IDs basically “for free” anyway.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that using a stable node identifier limits the number of unique IDs within each 100ns timestamp to 16,384"},{"type":"text","text":" "},{"type":"text","text":"(the number of unique sequence numbers). This usually isn’t a problem - 16K UUIDs per 100ns is"},{"type":"text","text":" "},{"type":"text","text":"an extremely high frequency."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Generates a new UUID sortable by creation time, with a particular node identifier."}],"identifier":{"url":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(node:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/uniqueid\/uniqueid\/timeordered(node:)"]}],"schemaVersion":{"patch":0,"minor":1,"major":0},"references":{"https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format-02":{"titleInlineContent":[{"type":"text","text":"draft form"}],"title":"draft form","type":"link","url":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered(rawTimestamp:sequence:node:)":{"title":"timeOrdered(rawTimestamp:sequence:node:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeOrdered"},{"kind":"text","text":"("},{"text":"rawTimestamp","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sequence","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV","text":"UniqueID","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/timeordered(rawtimestamp:sequence:node:)","abstract":[{"type":"text","text":"Creates a UUID sortable by creation time, using the given component values."}],"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(rawTimestamp:sequence:node:)"},"doc://com.karwa.UniqueID/documentation/UniqueID":{"kind":"symbol","abstract":[{"text":"UUIDv4 and v6* generation in Swift.","type":"text"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID","title":"UniqueID","url":"\/documentation\/uniqueid"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered(node:)":{"title":"timeOrdered(node:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeOrdered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV","text":"UniqueID","kind":"typeIdentifier"}],"url":"\/documentation\/uniqueid\/uniqueid\/timeordered(node:)","role":"symbol","abstract":[{"type":"text","text":"Generates a new UUID sortable by creation time, with a particular node identifier."}],"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(node:)","type":"topic"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueID"}],"abstract":[{"text":"A Universally Unique IDentifier (UUID).","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UniqueID"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID","title":"UniqueID","url":"\/documentation\/uniqueid\/uniqueid"}}}