{"identifier":{"url":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"externalID":"s:8UniqueIDAAV","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UniqueID","kind":"identifier"}],"title":"UniqueID","navigatorTitle":[{"text":"UniqueID","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"UniqueID"}]},"schemaVersion":{"patch":0,"major":0,"minor":1},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UniqueID","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"A UUID is an identifier that is unique across both space and time, with respect to the space of all UUIDs.","type":"text"},{"text":" ","type":"text"},{"text":"A UUID can be used for multiple purposes, from tagging objects with an extremely short lifetime,","type":"text"},{"text":" ","type":"text"},{"text":"to reliably identifying very persistent objects across a network.","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"UniqueID","type":"codeVoice"},{"type":"text","text":" supports any 128-bit UUID, and includes features to generate 2 kinds of ID:"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Random","type":"text"}]},{"type":"text","text":": As defined in "},{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc4122#section-4.4"},{"type":"text","text":" (UUIDv4)."}],"type":"paragraph"},{"inlineContent":[{"text":"A 128-bit identifier, consisting of 122 random bits.","type":"text"},{"text":" ","type":"text"},{"text":"These are the most common form of UUIDs; for example, they are the ones Foundation’s ","type":"text"},{"code":"UUID","type":"codeVoice"},{"text":" type creates","type":"text"},{"text":" ","type":"text"},{"text":"by default. To generate a random UUID, call the static ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/random()"},{"text":" function.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["for _ in 0..<3 {","  print(UniqueID.random())","}","\"DFFC75B4-C92F-4DA9-97CA-7F0EEF067FF2\"","\"67E5F28C-5083-4908-BD69-D7E27C8BABA4\"","\"3BA8EEF0-DFBE-4AE0-A646-E165FCA9054C\""]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Time-Ordered","type":"text"}]},{"type":"text","text":": Generated according to a "},{"isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02","type":"reference"},{"type":"text","text":" (UUIDv6)."}]},{"type":"paragraph","inlineContent":[{"text":"A 128-bit identifier, consisting of a 60-bit timestamp with 100ns precision, a 14-bit sequencing number seeded","type":"text"},{"text":" ","type":"text"},{"text":"from random bits, and a 48-bit node ID (which may also be random bits). To generate a time-ordered UUID,","type":"text"},{"text":" ","type":"text"},{"text":"call the static ","type":"text"},{"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered()","isActive":true,"type":"reference"},{"text":" function.","type":"text"}]},{"code":["for _ in 0..<3 {","  print(UniqueID.timeOrdered())","}","","\"1EC3C81E-A361-658C-BB38-65AAEF71CFCF\"","\"1EC3C81E-A361-6F6E-BB38-6DE69B9BCA1B\"","\"1EC3C81E-A362-698C-BB38-050642A95C73\""," |------------- --| |--| |----------|","     timestamp       sq      node"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"As you can see, time-ordered UUIDs generated in sequence share a common prefix (from the timestamp), yet","type":"text"},{"text":" ","type":"text"},{"text":"retain high collision avoidance. This allows the use of sorted data structures and algorithms","type":"text"},{"text":" ","type":"text"},{"text":"such as binary search, as an alternative to hash tables. They are far more efficient than random UUIDs for use","type":"text"},{"text":" ","type":"text"},{"text":"as database primary keys.","type":"text"}]}]}],"type":"unorderedList"},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"Random and Time-Ordered UUIDs may coexist in the same database.","type":"text"},{"text":" ","type":"text"},{"text":"They have different version numbers, so they are guaranteed to never collide.","type":"text"}]}]},{"type":"heading","anchor":"Compatibility-with-Foundation-UUID","level":3,"text":"Compatibility with Foundation UUID"},{"type":"paragraph","inlineContent":[{"code":"UniqueID","type":"codeVoice"},{"type":"text","text":" is fully compatible with Foundation’s "},{"code":"UUID","type":"codeVoice"},{"type":"text","text":" type, including being compatible with UUIDs in serialized"},{"type":"text","text":" "},{"type":"text","text":"JSON form. This makes it easy to experiment with time-ordered UUIDs in your application:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Change from `UUID()` to `UUID(.timeOrdered())`:","import Foundation","import UniqueID","","struct MyRecord {","  var id = UUID(.timeOrdered())  \/\/ <--","  \/\/ Other properties...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To construct a "},{"type":"codeVoice","code":"UniqueID"},{"type":"text","text":" from a Foundation "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":", simply initialize a value:"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import UniqueID","","let foundationID = UUID()","let swiftID = UniqueID(foundationID)  \/\/ <--"]},{"type":"heading","anchor":"Reading-UUID-Components","level":3,"text":"Reading UUID Components"},{"type":"paragraph","inlineContent":[{"text":"Time-ordered UUIDs include components with meaningful values - such as the time they were generated.","type":"text"},{"text":" ","type":"text"},{"text":"To read these values, use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/components(_:)","type":"reference"},{"text":" function:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let id = UniqueID(\"1EC5FE44-E511-6910-BBFA-F7B18FB57436\")!","id.components(.timeOrdered)?.timestamp","\/\/ ✅ \"2021-12-18 09:24:31 +0000\""]}],"kind":"content"}],"abstract":[{"type":"text","text":"A Universally Unique IDentifier (UUID)."}],"sections":[],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.karwa.UniqueID\/SL","doc:\/\/com.karwa.UniqueID\/s23CustomStringConvertibleP","doc:\/\/com.karwa.UniqueID\/Se","doc:\/\/com.karwa.UniqueID\/SE","doc:\/\/com.karwa.UniqueID\/SQ","doc:\/\/com.karwa.UniqueID\/SH","doc:\/\/com.karwa.UniqueID\/s25LosslessStringConvertibleP","doc:\/\/com.karwa.UniqueID\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/uniqueid\/uniqueid"]}],"hierarchy":{"paths":[["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID"]]},"topicSections":[{"title":"Generating a UUID","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/random()","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/random(using:)","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered()","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(using:)"]},{"title":"Converting from a Foundation UUID","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(_:)-30hew"]},{"title":"Parsing a UUID String","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(_:)-7p61g","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(utf8:)"]},{"title":"Obtaining a UUID’s String Representation","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/serialized(lowercase:separators:)"]},{"title":"UUIDs as Bytes","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(bytes:)-6y0j","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(bytes:)-bnh6","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/bytes-swift.property","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/withUnsafeBytes(_:)"]},{"title":"Reading a UUID’s Components","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/components(_:)","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/TimeOrdered"]},{"title":"Advanced UUID Generation","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(node:)","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(rawTimestamp:sequence:node:)"]},{"title":"Other","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/version","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/null"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Bytes-swift.typealias","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Components"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Comparable-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/CustomStringConvertible-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Decodable-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Encodable-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Equatable-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Hashable-Implementations","doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/LosslessStringConvertible-Implementations"]}],"references":{"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/init(bytes:)-bnh6":{"kind":"symbol","abstract":[{"text":"Creates a UUID with the given sequence of bytes. The sequence must contain exactly 16 bytes.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(bytes:)-bnh6","role":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/init(bytes:)-bnh6","title":"init(bytes:)"},"doc://com.karwa.UniqueID/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/com.karwa.UniqueID\/SQ"},"doc://com.karwa.UniqueID/documentation/UniqueID":{"kind":"symbol","abstract":[{"text":"UUIDv4 and v6* generation in Swift.","type":"text"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID","title":"UniqueID","url":"\/documentation\/uniqueid"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/TimeOrdered":{"url":"\/documentation\/uniqueid\/uniqueid\/timeordered","kind":"symbol","type":"topic","title":"UniqueID.TimeOrdered","role":"symbol","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/TimeOrdered","abstract":[{"type":"text","text":"The components of a time-ordered (version 6) UUID."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeOrdered"}],"navigatorTitle":[{"kind":"identifier","text":"TimeOrdered"}]},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/CustomStringConvertible-Implementations":{"url":"\/documentation\/uniqueid\/uniqueid\/customstringconvertible-implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/CustomStringConvertible-Implementations"},"doc://com.karwa.UniqueID/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/com.karwa.UniqueID\/SH"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/init(_:)-30hew":{"url":"\/documentation\/uniqueid\/uniqueid\/init(_:)-30hew","type":"topic","abstract":[{"text":"Losslessly convert a Foundation ","type":"text"},{"code":"UUID","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"UniqueID","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(_:)-30hew"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered(node:)":{"title":"timeOrdered(node:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeOrdered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV","text":"UniqueID","kind":"typeIdentifier"}],"url":"\/documentation\/uniqueid\/uniqueid\/timeordered(node:)","role":"symbol","abstract":[{"type":"text","text":"Generates a new UUID sortable by creation time, with a particular node identifier."}],"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(node:)","type":"topic"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Decodable-Implementations":{"url":"\/documentation\/uniqueid\/uniqueid\/decodable-implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","title":"Decodable Implementations","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Decodable-Implementations"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Comparable-Implementations":{"type":"topic","title":"Comparable Implementations","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Comparable-Implementations","url":"\/documentation\/uniqueid\/uniqueid\/comparable-implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/init(utf8:)":{"url":"\/documentation\/uniqueid\/uniqueid\/init(utf8:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(utf8:)","title":"init(utf8:)","abstract":[{"text":"Parses a UUID from its string representation, provided as a collection of UTF-8 code-units.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"UTF8Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UTF8Bytes"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/init(_:)-7p61g":{"url":"\/documentation\/uniqueid\/uniqueid\/init(_:)-7p61g","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(_:)-7p61g","title":"init(_:)","abstract":[{"text":"Parses a UUID from its string representation.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"StringType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"StringType"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Bytes-swift.typealias":{"title":"UniqueID.Bytes","kind":"symbol","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Bytes-swift.typealias","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/uniqueid\/uniqueid\/bytes-swift.typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}]},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/init(bytes:)-6y0j":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a UUID with the given bytes."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UniqueID","preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV5Bytesa","text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/init(bytes:)-6y0j","role":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/init(bytes:)-6y0j","title":"init(bytes:)"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Encodable-Implementations":{"url":"\/documentation\/uniqueid\/uniqueid\/encodable-implementations","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Encodable-Implementations","abstract":[],"role":"collectionGroup","kind":"article","title":"Encodable Implementations"},"doc://com.karwa.UniqueID/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/com.karwa.UniqueID\/Se"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Components":{"url":"\/documentation\/uniqueid\/uniqueid\/components","type":"topic","abstract":[{"text":"A view of the embedded information within certain UUIDs.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Components","kind":"identifier"}],"title":"UniqueID.Components","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Components","navigatorTitle":[{"text":"Components","kind":"identifier"}]},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Equatable-Implementations","type":"topic","url":"\/documentation\/uniqueid\/uniqueid\/equatable-implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/serialized(lowercase:separators:)":{"url":"\/documentation\/uniqueid\/uniqueid\/serialized(lowercase:separators:)","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/serialized(lowercase:separators:)","abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" representation of this UUID."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialized","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lowercase","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separators","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"serialized(lowercase:separators:)"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/Hashable-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/Hashable-Implementations","url":"\/documentation\/uniqueid\/uniqueid\/hashable-implementations","title":"Hashable Implementations","role":"collectionGroup","type":"topic"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/bytes-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"The bytes of this UUID."}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bytes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UniqueID","preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV5Bytesa","text":"Bytes","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/bytes-swift.property","role":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/bytes-swift.property","title":"bytes"},"doc://com.karwa.UniqueID/s8SendableP":{"identifier":"doc:\/\/com.karwa.UniqueID\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.karwa.UniqueID/s25LosslessStringConvertibleP":{"identifier":"doc:\/\/com.karwa.UniqueID\/s25LosslessStringConvertibleP","type":"unresolvable","title":"Swift.LosslessStringConvertible"},"https://datatracker.ietf.org/doc/html/rfc4122#section-4.4":{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc4122#section-4.4","titleInlineContent":[{"text":"RFC-4122","type":"text"}],"type":"link","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc4122#section-4.4","title":"RFC-4122"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered(rawTimestamp:sequence:node:)":{"title":"timeOrdered(rawTimestamp:sequence:node:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeOrdered"},{"kind":"text","text":"("},{"text":"rawTimestamp","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sequence","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","text":"UInt64","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:8UniqueIDAAV","text":"UniqueID","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/timeordered(rawtimestamp:sequence:node:)","abstract":[{"type":"text","text":"Creates a UUID sortable by creation time, using the given component values."}],"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(rawTimestamp:sequence:node:)"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/-Implementations":{"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/-Implementations","url":"\/documentation\/uniqueid\/uniqueid\/-implementations","kind":"article","role":"collectionGroup","abstract":[],"title":" Implementations"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered(using:)":{"role":"symbol","abstract":[{"type":"text","text":"Generates a new UUID sortable by creation time, using the given random number generator."}],"kind":"symbol","title":"timeOrdered(using:)","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered(using:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeOrdered","kind":"identifier"},{"text":"<","kind":"text"},{"text":"RNG","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RNG","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"UniqueID","kind":"typeIdentifier","preciseIdentifier":"s:8UniqueIDAAV"}],"url":"\/documentation\/uniqueid\/uniqueid\/timeordered(using:)"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/components(_:)":{"identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/components(_:)","kind":"symbol","type":"topic","url":"\/documentation\/uniqueid\/uniqueid\/components(_:)","abstract":[{"text":"Returns a view of the embedded information within this UUID.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"components","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ViewType","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"ViewType","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewType","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"components(_:)"},"doc://com.karwa.UniqueID/s23CustomStringConvertibleP":{"identifier":"doc:\/\/com.karwa.UniqueID\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/version":{"abstract":[{"type":"text","text":"The version of this UUID, if it can be determined."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"version","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/version","role":"symbol","type":"topic","title":"version","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/version"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/random()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier","text":"UniqueID"}],"abstract":[{"text":"Generates a new UUID with random bits from the system’s random number generator.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/random()","title":"random()","url":"\/documentation\/uniqueid\/uniqueid\/random()"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/random(using:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"random"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RNG"},{"kind":"text","text":">("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RNG"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier","text":"UniqueID"}],"abstract":[{"text":"Generates a new UUID with random bits from the given random number generator.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/random(using:)","title":"random(using:)","url":"\/documentation\/uniqueid\/uniqueid\/random(using:)"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/null":{"abstract":[{"type":"text","text":"The null UUID, "},{"type":"codeVoice","code":"00000000-0000-0000-0000-000000000000"},{"type":"text","text":"."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"null","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UniqueID","preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/null","role":"symbol","type":"topic","title":"null","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/null"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UniqueID"}],"abstract":[{"text":"A Universally Unique IDentifier (UUID).","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UniqueID"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID","title":"UniqueID","url":"\/documentation\/uniqueid\/uniqueid"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/LosslessStringConvertible-Implementations":{"url":"\/documentation\/uniqueid\/uniqueid\/losslessstringconvertible-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/LosslessStringConvertible-Implementations","title":"LosslessStringConvertible Implementations","abstract":[],"type":"topic"},"doc://com.karwa.UniqueID/SE":{"identifier":"doc:\/\/com.karwa.UniqueID\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/timeOrdered()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeOrdered"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:8UniqueIDAAV","kind":"typeIdentifier","text":"UniqueID"}],"abstract":[{"text":"Generates a new UUID sortable by creation time, using the system’s random number generator.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/timeOrdered()","title":"timeOrdered()","url":"\/documentation\/uniqueid\/uniqueid\/timeordered()"},"doc://com.karwa.UniqueID/SL":{"identifier":"doc:\/\/com.karwa.UniqueID\/SL","type":"unresolvable","title":"Swift.Comparable"},"https://datatracker.ietf.org/doc/html/draft-peabody-dispatch-new-uuid-format-02":{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02","titleInlineContent":[{"type":"text","text":"draft update of RFC-4122"}],"type":"link","url":"https:\/\/datatracker.ietf.org\/doc\/html\/draft-peabody-dispatch-new-uuid-format-02","title":"draft update of RFC-4122"},"doc://com.karwa.UniqueID/documentation/UniqueID/UniqueID/withUnsafeBytes(_:)":{"kind":"symbol","abstract":[{"text":"Invokes ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" with a pointer to the bytes of this UUID.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUnsafeBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.karwa.UniqueID\/documentation\/UniqueID\/UniqueID\/withUnsafeBytes(_:)","role":"symbol","url":"\/documentation\/uniqueid\/uniqueid\/withunsafebytes(_:)","title":"withUnsafeBytes(_:)"}}}